<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>swiftui on TOKOROM BLOG</title>
    <link>http://www.tokoro.me/tags/swiftui/</link>
    <description>Recent content in swiftui on TOKOROM BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>tokorom</copyright>
    <lastBuildDate>Mon, 27 Jan 2020 14:32:55 +0900</lastBuildDate>
    
	<atom:link href="http://www.tokoro.me/tags/swiftui/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SwiftUIアプリを24時間で作ってリリースするひとりハッカソンの結果報告</title>
      <link>http://www.tokoro.me/posts/swiftui-hackathon/</link>
      <pubDate>Mon, 27 Jan 2020 14:32:55 +0900</pubDate>
      
      <guid>http://www.tokoro.me/posts/swiftui-hackathon/</guid>
      <description>2019年はSwiftUI誕生の年 2019年のSwiftUIの発表はたいへんインパクトがありましたね！ Objective-CからSwiftへの変遷と同様に、ここ数年で間違いなくSwiftUIがiOSアプリ開発のスタンダードになるものと思います。
いっぽうでSwiftUIはまだまだ機能不足、情報不足で実際にリリースする案件に適用するには心許ないというのが2020年1月時点での現状です。特に自社のメインサービスやクライアントワークでSwiftUIを導入するの決断をするのはなかなか難しい時期かもしれません。
また次の6月のWWDCでアップデートが発表され状況は変わってくると思いますが、それを待つのも&amp;hellip;
ということでハッカソン ということで、冬休みにひとりでハッカソンを実施して、
 24時間でSwiftUIでiOSアプリを開発して AppStoreでリリースする  ところまでやる！ということにしました。
自分で勝手に企画して出すアプリですのでSwiftUIを使っても誰にも文句は言われません！
必須利用技術 このハッカソン企画での必須利用技術は、
 SwiftUI Firebase（Firestore） Sign in with Apple  の３つとしました。
SwiftUI はもちろんですが、ローカルオンリーで動作するアプリだとSwiftUIの検証には弱いかなと思い、サーバにデータを保管するようにしバックエンドには Firebase(Firestore) を利用することにしました。 また、SwiftUIを採用する時点でターゲットOSがiOS 13以降になるので、ついでにiOS 13の新要素 Sign in with Apple でのSign inを実装することにしました。
リリースの定義 今回はゴールであるリリースの定義を、
 アプリを開発し終えて AppStore用のメタデータやスクリーンショットを作って投稿して 実際に審査に出す  ところまで、としました。
作るアプリ 作るアプリはちょうど自分が欲しいと思っていた「こどもたちのお金を親が管理するアプリ」にしました。
Photo by Michael Longmire on Unsplash
解決したい課題 我が家ではこどもたちにお金の教育を兼ねて毎月おこづかいを渡しているのですが、
 先月のおこづかい渡したっけ？渡してなかったけ？とよくわならなくなる お年玉が高額で幼稚園児に管理させるのが不安（かといって子供の銀行口座を作るのは面倒） 弟が姉の貯金箱を漁る事件が発生！ お店でこどもが「おこづかいでこのおもちゃ買いたい！」という時におこづかいを持ってきていない ○○カメラでおこづかいでおもちゃを買わせたいが、ほんとは〇〇カメラのポイント使っちゃいたい！ ほんとは余っている〇〇Payで支払いたい！  など様々な悩みが出てきました。
解決するための機能 これらを解決するためには、
 こどもに現金を持たせなくても親が残高を管理すればよい 記録さえ残せば、親の財布が銀行代わりで、財布から出金、財布に入金でかまわない 入金、出金の記録は親もあとから削除・修正できないようにして証拠として残す 普段使いの少額の現金はその残高から出金してこどもに渡す おこづかいを使う時は親の財布から出金すればよいので〇〇カメラのポイントも○○Payもクレジットカードも使い放題！  と考え、シンプルに親のアプリでこどものおこづかい残高を管理できればよいと仮定しました。</description>
    </item>
    
  </channel>
</rss>