<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hugo on TOKOROM BLOG</title>
    <link>http://www.tokoro.me/tags/hugo/</link>
    <description>Recent content in hugo on TOKOROM BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>tokorom</copyright>
    <lastBuildDate>Tue, 31 Mar 2020 16:38:32 +0900</lastBuildDate>
    
	<atom:link href="http://www.tokoro.me/tags/hugo/atom.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>VimでMarkdown形式でブログ記事を書くときに簡単に画像を埋め込む方法</title>
      <link>http://www.tokoro.me/posts/vim-markdown-image-tool/</link>
      <pubDate>Tue, 31 Mar 2020 16:38:32 +0900</pubDate>
      
      <guid>http://www.tokoro.me/posts/vim-markdown-image-tool/</guid>
      <description>Photo by Victor Grabarczyk on Unsplash
ブログ記事書くとき画像を埋め込むのが面倒 こういったブログ記事は、皆さんどういう執筆環境で書いているでしょうか？
最近だとHugoなどの静的サイトジェネレータを利用することも多いのではないでしょうか。 この記事もHugoで運用しています。
記事を投稿するときは、いつもVimでさらっとMarkdown形式で書き上げ、ぱぱっとデプロイコマンドを打つだけで簡単便利な環境なのですが、唯一、記事に画像を埋め込むのだけが面倒だと感じてます。
特に、いわゆるブログサービスを利用している場合には、記事作成ページに埋め込みたい画像をドラッグ＆ドロップするだけで画像をアップロード＆埋め込みできてしまうので、それとの比較で面倒さが際立ちます。
手動での画像埋め込み手順 これまで手動で画像を埋め込む際には、このブログ記事の場合だと、
 各記事用の画像ディレクトリとして content/images/記事名 ディレクトリを作成 埋め込みたい画像を content/images/記事名 以下にコピー 記事内に ![image](/images/記事名/画像名) を埋め込む 必要に応じてImageOptimなどで画像の最適化  をしていました。
決して難しいことはありませんが地味に面倒でした。
ドラッグ＆ドロップでなんとかならない？ 結論として、私の執筆環境である「Terminal + Vim」ではドラッグ＆ドロップをうまくハンドリングする方法がわからず、ドラッグ＆ドロップだけでなんとかはなっていません。
ただ、TerminalのVim上に画像ファイルをドラッグ＆ドロップすると、その画像ファイルの絶対パスがVimに埋め込まれますので、その行でワンコマンドかますだけでなんとかなりそうだなと思い、Vim用のpluginを作りました。
具体的には、デスクトップ上のdog.jpgをドラッグ＆ドロップすると、Vim上に
/Users/tokorom/Desktop/dog.jpg が埋め込まれますので、この行でコマンドを打ち、あとは必要なことを自動でやってくれる、という方式です。
現在行のファイルパスに対してなにかをするplugin このファイルパスに対してなにをしたいかは執筆環境により異なりますので、pluginに追加したのは、
function vim_replace_current_line#execute() let line = getline(&amp;#39;.&amp;#39;) let result = system(g:vim_replace_current_line#command . &amp;#39; &amp;#39; . expand(&amp;#39;%&amp;#39;) . &amp;#39; &amp;#39; . expand(&amp;#39;%:t:r&amp;#39;) . &amp;#39; &amp;#39; . trim(line)) call setline(&amp;#39;.&amp;#39;, trim(result))endfunctionという３行のシンプルなfunction１つだけです。
ここでやっているのは、
 特定のコマンドを実行し その引数として「編集中のファイル名」「ファイル名の拡張子を抜いた部分（記事名を想定）」「現在行（画像ファイルのパスを想定）」の３つを渡す コマンドの実行結果で現在行を置き換え  ということだけです。</description>
    </item>
    
  </channel>
</rss>