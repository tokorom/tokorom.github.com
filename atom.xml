<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[TOKOROM BLOG]]></title>
  <link href="http://www.tokoro.me/atom.xml" rel="self"/>
  <link href="http://www.tokoro.me/"/>
  <updated>2012-08-12T23:41:50+09:00</updated>
  <id>http://www.tokoro.me/</id>
  <author>
    <name><![CDATA[Yuta ToKoRo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
    <entry>
      




<title type="html"><![CDATA[Objective-Cで独自クラスに[]でアクセスする]]></title>
<link href="http://www.tokoro.me/2012/08/12/objc-subscripting/"/>
<updated>2012-08-12T22:34:00+09:00</updated>
<id>http://www.tokoro.me/2012/08/12/objc-subscripting</id>

      <content type="html"><![CDATA[<p>まず、Xcode4.4から使えるObjective-Cの新しい書き方については <a href="http://www.tokoro.me/2012/08/12/objc-new-statements/">前の記事</a> をご参照ください。</p>

<h2>Xcode4.4からMacアプリ開発で使える新しいリテラル</h2>

<p>上記記事には書いていないのですがMac向けのアプリではこの他にも、</p>

<ul>
<li><strong>array[1]</strong> でNSArrayの要素にアクセスできる</li>
<li><strong>dictionary[key]</strong> でNSDictionaryの要素にアクセスできる</li>
<li><strong>@YES</strong>/<strong>@NO</strong> でもNSNumberのインスタンスを作れる</li>
</ul>


<p>といった変更があります。<br/>
こちらについては残念ながらiOSアプリ開発ではまだ利用できません。</p>

<p>※ これらがターゲットがMacの場合には利用できてiOSの場合には利用できないということは、 <a href="https://twitter.com/k_katsumi">@k_katsumi</a> さんに教えてもらいました。</p>

<h2>でも[]でアクセスする仕組み自体はiOSでも使えます!</h2>

<p><a rel="bookmark" href="http://www.tokoro.me/2012/08/12/objc-subscripting/">続きを読む &rarr;</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[いまさらですがXcode4.4からiOS開発で使えるようになった新しいObjective-Cの書き方をまとめます]]></title>
<link href="http://www.tokoro.me/2012/08/12/objc-new-statements/"/>
<updated>2012-08-12T12:50:00+09:00</updated>
<id>http://www.tokoro.me/2012/08/12/objc-new-statements</id>

      <content type="html"><![CDATA[<p>もうほとんどのかたが既知の内容と思いますが、まとめさせていただきます。<br/>
これらは全てコンパイル時に事が済む類のものなので、iOS5だけでなくiOS4でも当然使えるというのが嬉しいですね!</p>

<h2>Xcode4.4適用前</h2>

<p>Xcode4.3までのこのコードを&#8230;</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#pragma mark - Private Category</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">Sample</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">)</span> <span class="n">NSNumber</span><span class="o">*</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">)</span> <span class="n">NSNumber</span><span class="o">*</span> <span class="n">c</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">)</span> <span class="n">NSNumber</span><span class="o">*</span> <span class="n">f</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">)</span> <span class="n">NSArray</span><span class="o">*</span> <span class="n">array</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">)</span> <span class="n">NSDictionary</span><span class="o">*</span> <span class="n">dictionary</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">privateMethods1</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">privateMethods2</span><span class="p">;</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">privateMethods3</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark - Main Implementation</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">Sample</span>
</span><span class='line'>
</span><span class='line'><span class="k">@synthesize</span> <span class="n">i</span> <span class="o">=</span> <span class="n">i_</span><span class="p">;</span>
</span><span class='line'><span class="k">@synthesize</span> <span class="n">c</span> <span class="o">=</span> <span class="n">c_</span><span class="p">;</span>
</span><span class='line'><span class="k">@synthesize</span> <span class="n">f</span> <span class="o">=</span> <span class="n">f_</span><span class="p">;</span>
</span><span class='line'><span class="k">@synthesize</span> <span class="n">array</span> <span class="o">=</span> <span class="n">array_</span><span class="p">;</span>
</span><span class='line'><span class="k">@synthesize</span> <span class="n">dictionary</span> <span class="o">=</span> <span class="n">dictionary_</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">privateMethods1</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">privateMethods2</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">privateMethods3</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">privateMethods2</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">i</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithInt:</span><span class="mi">100</span><span class="p">];</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">c</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithChar:</span><span class="sc">&#39;a&#39;</span><span class="p">];</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">f</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithFloat:</span><span class="mf">3.14f</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">privateMethods3</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">array</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSArray</span> <span class="nl">arrayWithObjects:</span><span class="s">@&quot;1&quot;</span><span class="p">,</span> <span class="s">@&quot;2&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithBool:</span><span class="n">YES</span><span class="p">],</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">dictionary</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSDictionary</span> <span class="nl">dictionaryWithObjectsAndKeys:</span><span class="s">@&quot;val1&quot;</span><span class="p">,</span> <span class="s">@&quot;key1&quot;</span><span class="p">,</span> <span class="s">@&quot;val2&quot;</span><span class="p">,</span> <span class="s">@&quot;key2&quot;</span><span class="p">,</span> <span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Xcode4.4適用後</h2>

<p>Xcode4.4からはこうできます！</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cp">#pragma mark - Private Category</span>
</span><span class='line'>
</span><span class='line'><span class="k">@interface</span> <span class="nc">Sample</span> <span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">)</span> <span class="n">NSNumber</span><span class="o">*</span> <span class="n">i</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">)</span> <span class="n">NSNumber</span><span class="o">*</span> <span class="n">c</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">)</span> <span class="n">NSNumber</span><span class="o">*</span> <span class="n">f</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">)</span> <span class="n">NSArray</span><span class="o">*</span> <span class="n">array</span><span class="p">;</span>
</span><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">)</span> <span class="n">NSDictionary</span><span class="o">*</span> <span class="n">dictionary</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#pragma mark - Main Implementation</span>
</span><span class='line'>
</span><span class='line'><span class="k">@implementation</span> <span class="nc">Sample</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">privateMethods1</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">privateMethods2</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">self</span> <span class="n">privateMethods3</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">privateMethods2</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">i</span> <span class="o">=</span> <span class="err">@</span><span class="mi">100</span><span class="p">;</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">c</span> <span class="o">=</span> <span class="sc">@&#39;a&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">f</span> <span class="o">=</span> <span class="err">@</span><span class="mf">3.14f</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">privateMethods3</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">array</span> <span class="o">=</span> <span class="err">@</span><span class="p">[</span><span class="s">@&quot;1&quot;</span><span class="p">,</span> <span class="s">@&quot;2&quot;</span><span class="p">,</span> <span class="err">@</span><span class="p">(</span><span class="n">YES</span><span class="p">)];</span>
</span><span class='line'>  <span class="n">self</span><span class="p">.</span><span class="n">dictionary</span> <span class="o">=</span> <span class="err">@</span><span class="p">{</span><span class="s">@&quot;key1&quot;</span><span class="o">:</span> <span class="s">@&quot;val1&quot;</span><span class="p">,</span> <span class="s">@&quot;key2&quot;</span><span class="o">:</span> <span class="s">@&quot;val2&quot;</span><span class="p">};</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure>


<p>以下、具体的な内容を説明します。</p>

<p><a rel="bookmark" href="http://www.tokoro.me/2012/08/12/objc-new-statements/">続きを読む &rarr;</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[JenkinsにBitbucketからビルド命令を出す際にIDとPasswordを埋め込まないようにする]]></title>
<link href="http://www.tokoro.me/2012/07/29/security-for-jenkins/"/>
<updated>2012-07-29T16:00:00+09:00</updated>
<id>http://www.tokoro.me/2012/07/29/security-for-jenkins</id>

      <content type="html"><![CDATA[<p><a href="http://www.tokoro.me/2012/07/29/jenkins-octopress/">前の記事</a>でBitbucketにpushしたのをトリガーにJenkinsでOctopressをデプロイするというのをやったのだが、このときは認証なしでJobの実行できるようになってしまっていた。<br/>
つまりこのままだと自分のJenkinsは認証なしで全てのJobが実行できてしまうという状態でよろしくない。<br/>
ひとつの解決索としてビルド命令用のユーザを作り、そのIDとPasswordをURLに直接埋め込んでしまうという方法も考えられるが、今回はそれを極力しない方向でがんばりたいと思う。</p>

<h2>JenkinsにBitbucketからアクセスするためのユーザを追加</h2>

<p>まずはBitbucketからJenkinsにアクセスする専用のユーザを作る。</p>

<p>※ ユーザの追加方法については <a href="https://wiki.jenkins-ci.org/display/JA/Standard+Security+Setup">このあたり</a> を参照</p>

<p>今回は、<strong>bitbucket</strong> というユーザを追加した。</p>

<p>また、 <strong>Manage Jenkins</strong> -> <strong>Configure System</strong> で、</p>

<ul>
<li>Access Control

<ul>
<li>Authorization

<ul>
<li>Matrix-based security

<ul>
<li>bitbucketユーザに <strong>Job</strong> の <strong>Read</strong> だけチェック</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>


<p><a rel="bookmark" href="http://www.tokoro.me/2012/07/29/security-for-jenkins/">続きを読む &rarr;</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Jenkins@さくらVPSにOctopressのデプロイを任せてみる]]></title>
<link href="http://www.tokoro.me/2012/07/29/jenkins-octopress/"/>
<updated>2012-07-29T15:50:00+09:00</updated>
<id>http://www.tokoro.me/2012/07/29/jenkins-octopress</id>

      <content type="html"><![CDATA[<h2>目的</h2>

<p>Octopressで記事を書いたあと、 <strong>Bitbucket</strong> に <code>git push origin source</code> とするだけで <strong>Github Pages</strong> に勝手にデプロイされるようにする。</p>

<h2>イメージ</h2>

<p><img class="center" src="http://dl.dropbox.com/u/10351676/images/octopress_deploy.png"></p>

<ol>
<li>自分はブログ記事を書き終わったら、Bitbucketに git push だけしてあとは放っておく</li>
<li>Bitbucketは該当リポジトリが更新されると、さくらVPSのJenkinsのURLを叩く</li>
<li>Jenkinsはそれを契機にBitbucketからファイル一式をcloneしてOctopresで記事を作成する</li>
<li>Jenkinsは作成した記事をGithub Pagesにデプロイする</li>
</ol>


<p><a rel="bookmark" href="http://www.tokoro.me/2012/07/29/jenkins-octopress/">続きを読む &rarr;</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[さくらVPSにJenkinsさんをインストールする]]></title>
<link href="http://www.tokoro.me/2012/07/24/install-jenkins-to-sakura/"/>
<updated>2012-07-24T02:57:00+09:00</updated>
<id>http://www.tokoro.me/2012/07/24/install-jenkins-to-sakura</id>

      <content type="html"><![CDATA[<h2>JDKのインストール</h2>

<p>Javaが未インストールならこちらから。</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>$ sudo yum install java-1.6.0-openjdk java-1.6.0-openjdk-devel</span></code></pre></td></tr></table></div></figure>


<h2>Jenkinsのインストール</h2>

<p>基本的に <a href="http://pkg.jenkins-ci.org/redhat/">公式ページ</a> に書いてあるとおりにするだけ。</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>$ sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo
</span><span class='line'>$ sudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key
</span><span class='line'>$ sudo yum install jenkins</span></code></pre></td></tr></table></div></figure>




<p><a rel="bookmark" href="http://www.tokoro.me/2012/07/24/install-jenkins-to-sakura/">続きを読む &rarr;</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Octopressでソースコードの一部分だけを参照する]]></title>
<link href="http://www.tokoro.me/2012/07/15/octopress-part-of-codes/"/>
<updated>2012-07-15T16:55:00+09:00</updated>
<id>http://www.tokoro.me/2012/07/15/octopress-part-of-codes</id>

      <content type="html"><![CDATA[<h2>おさらい：Octopressでソースコードを表示する</h2>

<p>まずはおさらいでOctopressでソースコードを表示する方法は以下のとおり。</p>

<h3>1. 指定のディレクトリにファイルを置く</h3>

<p>置き場所は <em>source/downloads/code</em> 。<br/>
例えば、ここに <em>sample/test.rb</em> というファイルを置いておく。</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='plain'><span class='line'>$ mkdir -p source/downloads/code/sample
</span><span class='line'>$ cp test.rb source/downloads/code/sample/</span></code></pre></td></tr></table></div></figure>




<p><a rel="bookmark" href="http://www.tokoro.me/2012/07/15/octopress-part-of-codes/">続きを読む &rarr;</a></p>]]></content>
    </entry>
  
    <entry>
      




<title type="html"><![CDATA[Macにpandocをインストール中にhs-httpで引っかかったのを解消した手順]]></title>
<link href="http://www.tokoro.me/2012/07/15/install-pandoc/"/>
<updated>2012-07-15T03:13:00+09:00</updated>
<id>http://www.tokoro.me/2012/07/15/install-pandoc</id>

      <content type="html"><![CDATA[<h2>hs-httpがインストールできない!</h2>

<p>Macにpandocを入れようと気軽にMacPortsで</p>

<figure class='code'><div class='highlight'><table><td class='gutter'><pre class='line-numbers'><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo port install pandoc
</span></code></pre></td></tr></table></div></figure>


<p>したところ <em>hs-http</em> のインストールのところでなにやらエラー&#8230;</p>

<p>試しに <em>hs-http</em> だけインストールしてみたところ、</p>

<p><a rel="bookmark" href="http://www.tokoro.me/2012/07/15/install-pandoc/">続きを読む &rarr;</a></p>]]></content>
    </entry>
  
</feed>
